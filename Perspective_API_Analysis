{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Coding Assignment: Data Bias"
      ],
      "metadata": {
        "id": "oqejudB5nXQG"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "tXKaZvyQvdeS"
      },
      "outputs": [],
      "source": [
        "from googleapiclient import discovery\n",
        "import json"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "API_KEY = 'AIzaSyB--_dt5QFSQ7LyT-prJ4Ggp1Xf4rkLuro'"
      ],
      "metadata": {
        "id": "p1Hkat7Pvlp5"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "client = discovery.build(\n",
        "  \"commentanalyzer\",\n",
        "  \"v1alpha1\",\n",
        "  developerKey=API_KEY,\n",
        "  discoveryServiceUrl=\"https://commentanalyzer.googleapis.com/$discovery/rest?version=v1alpha1\",\n",
        "  static_discovery=False,\n",
        ")"
      ],
      "metadata": {
        "id": "0FlBIsAdwsnb"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Hypothesis\n",
        "Perspective will be more likely to rate comments that contain profanity with scores over 0.5 than comments that don't contain profanity, regardless of the context that the profanity was used in."
      ],
      "metadata": {
        "id": "JBlg8fO7f8bZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 5 Highly Toxic Sentences without Profanity\n",
        "*   This is just a bunch of nonsense. I can't believe I wasted my time reading it.\n",
        "*   The author clearly doesn't know what they're talking about.\n",
        "*   They're greedy, small-minded people.\n",
        "*   haha you guys are a bunch of losers.\n",
        "*   Youâ€™re so incompetent\n",
        "\n"
      ],
      "metadata": {
        "id": "HwJV9fBM457b"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'This is just a bunch of nonsense. I can\\'t believe I wasted my time reading it.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z61NupNiJXwi",
        "outputId": "8637f16a-9b4d-4714-eb35-864892d3db19"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 78, 'score': {'value': 0.42985553, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.42985553, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'The author clearly doesn\\'t know what they\\'re talking about.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wIzHYYJGJee_",
        "outputId": "1262d581-9ff4-4240-c058-dbf2b21117eb"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 59, 'score': {'value': 0.10696511, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.10696511, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'They\\'re greedy, small-minded people.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a9f7255b-a1c6-4399-b2a9-500e65e63095",
        "id": "GJr0oEXi5vwL"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 36, 'score': {'value': 0.584095, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.584095, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'haha you guys are a bunch of losers.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tGo2PCUuIkfl",
        "outputId": "b7135715-73cb-4f86-cdd5-d0175302ef9d"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 36, 'score': {'value': 0.7570315, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.7570315, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'You\\'re so incompetent' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_NXTqjh158kF",
        "outputId": "bc89352a-9ee3-4c77-8378-67f353ca0e12"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 21, 'score': {'value': 0.52139956, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.52139956, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**3/5 examples wre correctly predicted as toxic.**"
      ],
      "metadata": {
        "id": "FfUcGFGd8nhs"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 5 Normal Non-Toxic Sentences without Profanity\n",
        "*   Awesome! Signed up just to give this a shot... good luck to your enterprise!\n",
        "*   The research in this paper is well-conducted and thorough.\n",
        "*   I love this product, it's so innovative!\n",
        "*   Great job on the presentation! Very informative.\n",
        "*   Thank you!! This would make my life a lot less anxiety-inducing. Keep it up, and don't let anyone get in your way!\n"
      ],
      "metadata": {
        "id": "OMQFe59p6HDJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'Awesome! Signed up just to give this a shot... good luck to your enterprise!' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k67jcMH_6ZwO",
        "outputId": "cad567c8-12aa-4c73-bb1e-91a7a2c28eb9"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 76, 'score': {'value': 0.045378547, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.045378547, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'The research in this paper is well-conducted and thorough.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VcXXNOhK6hkE",
        "outputId": "f4906b41-cf3f-48d5-ce8e-e40f811fcc71"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 58, 'score': {'value': 0.013885498, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.013885498, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'I love this product, it\\'s so innovative!' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8tg7FvMP6nch",
        "outputId": "f99c595f-6fd1-4526-ab30-d946da5cd38b"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 40, 'score': {'value': 0.018095128, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.018095128, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'Great job on the presentation! Very informative.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "11KvVHnCJoi4",
        "outputId": "421a5f14-e508-440a-ff47-7bb9abd52483"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 48, 'score': {'value': 0.009550206, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.009550206, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'Thank you!! This would make my life a lot less anxiety-inducing. Keep it up, and don\\'t let anyone get in your way!' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I9tJVTem6xVT",
        "outputId": "7140a6c4-5ab8-449b-9809-0773769dabf9"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 114, 'score': {'value': 0.054037213, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.054037213, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**5/5 examples were correctly predicted as non-toxic.**"
      ],
      "metadata": {
        "id": "TpXRZHqI8v_s"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 5 Highly Toxic Sentences with Profanity\n",
        "*   ur a shitty comment.\n",
        "*   This bitch is nuts. Who would read a book by a woman.\n",
        "*   This is the worst thing I've ever read. Bullshit!\n",
        "*   This is the shittiest experience Iâ€™ve ever had.\n",
        "*   You are such a moron and a waste of time!\n"
      ],
      "metadata": {
        "id": "bMAal2XU68w0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'ur a shitty comment.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "anbPBC49JACr",
        "outputId": "95b50e96-718e-4873-8361-6d90ae65b8c1"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 20, 'score': {'value': 0.911035, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.911035, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'This bitch is nuts. Who would read a book by a woman.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bcbcaef2-771c-4cee-dd5e-ffa0f2d4513a",
        "id": "5DjHskBZ7L6Z"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 53, 'score': {'value': 0.9288007, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.9288007, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'This is the worst thing I\\'ve ever read. Bullshit!' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6cf7fc5a-ba3d-40cb-a043-53bd5db342d8",
        "id": "MMXDMGAQ7MTT"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 49, 'score': {'value': 0.8988238, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.8988238, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'This is the shittiest experience I\\'ve ever had.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4f6b0429-8d7d-41dc-8801-b9510221c239",
        "id": "tQI19B7w7Md7"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 47, 'score': {'value': 0.743089, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.743089, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'You are such a moron and a waste of time!' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3fa27f9d-1cd7-4843-b6d0-3ff5048b4402",
        "id": "CNt5GZML7MH_"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 41, 'score': {'value': 0.9061063, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.9061063, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**5/5 examples were correctly predicted as toxic.**"
      ],
      "metadata": {
        "id": "kFKa4beP82gS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 5 Normal Non-Toxic Sentences with Profanity\n",
        "*   This is a great story. Man. I wonder if the person who yelled \"shut the fuck up!\" at him ever heard it.\n",
        "*   Donâ€™t ever listen to his bullshit! You deserve way better, and I believe in you.\n",
        "*   She was just being an ass to you for no reason. Please donâ€™t take those comments to heart.\n",
        "*   Just because the job cycle is shitty, it doesnâ€™t mean you canâ€™t get a job, because you are very talented.\n",
        "*   Iâ€™m sorry that the customer service was crappy. Hope youâ€™re treated better next time.\n",
        "\n"
      ],
      "metadata": {
        "id": "ZtcbV2x27vm1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'This is a great story. Man. I wonder if the person who yelled \"shut the fuck up!\" at him ever heard it.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7fd282da-dea4-45a4-f229-6d560dff1e24",
        "id": "-czkGoe17-tR"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 103, 'score': {'value': 0.6308517, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.6308517, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'Donâ€™t ever listen to his bullshit! You deserve way better, and I believe in you.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "75bf4a62-d767-42aa-ba0f-7bc58e2f422e",
        "id": "_zTadimz7_QL"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 80, 'score': {'value': 0.743089, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.743089, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'She was just being an ass to you for no reason. Please donâ€™t take those comments to heart.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e5be7267-a617-4a65-9ac8-5bdcf79188e0",
        "id": "bym8_ic17_b-"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 90, 'score': {'value': 0.6989911, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.6989911, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'Just because the job cycle is shitty, it doesnâ€™t mean you canâ€™t get a job, because you are very talented.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "948ffa54-c155-4212-8f43-77e432789fd3",
        "id": "G4t6Mhp17_oJ"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 105, 'score': {'value': 0.5532103, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.5532103, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "analyze_request = {\n",
        "  'comment': { 'text': 'Iâ€™m sorry that the customer service was shit. Hope youâ€™re treated better next time.' },\n",
        "  'requestedAttributes': {'TOXICITY': {}}\n",
        "}\n",
        "\n",
        "response = client.comments().analyze(body=analyze_request).execute()\n",
        "print(response)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "65bee0ec-74b0-4381-c43c-8d2bb2b93c6a",
        "id": "X8yX9lKW7_xn"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'attributeScores': {'TOXICITY': {'spanScores': [{'begin': 0, 'end': 83, 'score': {'value': 0.60254884, 'type': 'PROBABILITY'}}], 'summaryScore': {'value': 0.60254884, 'type': 'PROBABILITY'}}}, 'languages': ['en'], 'detectedLanguages': ['en']}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**0/5 examples were correctly predicted as non-toxic.**"
      ],
      "metadata": {
        "id": "389adwpj8a6r"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Class Wise Accuracy"
      ],
      "metadata": {
        "id": "JML5tqr3W4hu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def class_wise_acc(y_actual, y_predicted):\n",
        "    total_toxic_without_profanity = 5\n",
        "    total_non_toxic_without_profanity = 5\n",
        "    total_toxic_with_profanity = 5\n",
        "    total_non_toxic_with_profanity = 5\n",
        "\n",
        "    TP_toxic_without_profanity = 3\n",
        "    TP_non_toxic_without_profanity = 5\n",
        "    TP_toxic_with_profanity = 5\n",
        "    TP_non_toxic_with_profanity = 0\n",
        "\n",
        "    for i in range(len(y_predicted)):\n",
        "        if y_actual[i] == 1:\n",
        "            total_toxic_without_profanity += 1\n",
        "            if y_actual[i] == y_predicted[i]:\n",
        "                TP_toxic_without_profanity += 1\n",
        "        elif y_actual[i] == 0:\n",
        "            total_non_toxic_without_profanity += 1\n",
        "            if y_actual[i] == y_predicted[i]:\n",
        "                TP_non_toxic_without_profanity += 1\n",
        "        elif y_actual[i] == 1:\n",
        "            total_toxic_with_profanity += 1\n",
        "            if y_actual[i] == y_predicted[i]:\n",
        "                TP_toxic_with_profanity += 1\n",
        "        elif y_actual[i] == 0:\n",
        "            total_non_toxic_with_profanity += 1\n",
        "            if y_actual[i] == y_predicted[i]:\n",
        "                TP_non_toxic_with_profanity += 1\n",
        "\n",
        "    return (\n",
        "        TP_toxic_without_profanity / total_toxic_without_profanity,\n",
        "        TP_non_toxic_without_profanity / total_non_toxic_without_profanity,\n",
        "        TP_toxic_with_profanity / total_toxic_with_profanity,\n",
        "        TP_non_toxic_with_profanity / total_non_toxic_with_profanity\n",
        "    )\n",
        "\n",
        "acc_toxic_without_profanity, acc_non_toxic_without_profanity, acc_toxic_with_profanity, acc_non_toxic_with_profanity = class_wise_acc(y_actual, y_predicted)\n",
        "\n",
        "print(f\"Accuracy for 'Toxic without Profanity': {acc_toxic_without_profanity}\")\n",
        "print(f\"Accuracy for 'Non-Toxic without Profanity': {acc_non_toxic_without_profanity}\")\n",
        "print(f\"Accuracy for 'Toxic with Profanity': {acc_toxic_with_profanity}\")\n",
        "print(f\"Accuracy for 'Non-Toxic with Profanity': {acc_non_toxic_with_profanity}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "03OhdsCtW9rA",
        "outputId": "8a813ca1-df43-462b-eb36-df725e5e4c4f"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy for 'Toxic without Profanity': 0.6\n",
            "Accuracy for 'Non-Toxic without Profanity': 1.0\n",
            "Accuracy for 'Toxic with Profanity': 1.0\n",
            "Accuracy for 'Non-Toxic with Profanity': 0.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Results and Findings\n",
        "\n",
        "My initial hypothesis, Perspective will be more likely to rate comments that contain profanity with scores over 0.5 than comments that don't contain profanity, regardless of the context that the profanity was used in, was affirmed after testing 5 statements from each of the 4 categories:\n",
        "\n",
        "1.   Highly Toxic Statements without Profanity\n",
        "2.   Normal Non-Toxic Statements without Profanity\n",
        "3.   Highly Toxic Statements with Profanity\n",
        "4.   Normal Non-Toxic Statements with Profanity\n",
        "\n",
        "After testing the statements from each of the 4 categories, it was observed that the model was more accurately able to detect toxicity for statements that contained profanity and non-toxicity for statements that did not contain profanity. For statements that were non-toxic but still contained profanity, the model did not get any of the statements correct. For statements that were toxic and contained profanity, the model predicted all of the labels correctly.\n",
        "\n",
        "I believe this is because oftentimes, swear words are used in an insulting or \"toxic\" manner. Profanity is usually used in sitations of high emotion. The model may have been trained on this basis where if a swear word was detected, the statement would automatically be labeled as toxic regardless of the context that the word was used in."
      ],
      "metadata": {
        "id": "NX5NtNIpk5e8"
      }
    }
  ]
}
